---

- name: Create SAP Hana Tier2 Replication
  pause:
    prompt: Please confirm you want to Create SAP Hana Tier2 Replication! Press return to continue. Press Ctrl+c and then "a" to abort

- name: get system-replication state
  shell: |
    su - "{{ sid|lower }}adm" -c '/usr/sap/{{ sid }}/HDB{{ number }}/exe/hdbnsutil -sr_state'
  register: srstate_primary
  changed_when: false

- name: Primary System Replication
  block:
    - name: "Make sure secondary server IP address is in /etc/hosts"
      lineinfile:
        path: /etc/hosts
        line: "{{ secondary_server['public_ip'] }} {{ secondary_server['hostname'] }}.{{ fqdn }} {{ secondary_server['hostname'] }}"
        state: present

    - name: Perform Backup to primary node
      shell: |
          /hana/shared/"{{ sid }}"/hdbclient/hdbsql -i "{{ number }}" -u SYSTEM -p "{{ system_user_password }}" -n localhost:3"{{ number }}"13 "backup data for {{ sid }} using file ('COMPLETE_DATA_BACKUP')"
          /hana/shared/"{{ sid }}"/hdbclient/hdbsql -i "{{ number }}" -u SYSTEM -p "{{ system_user_password }}" -n localhost:3"{{ number }}"13 "backup data using file ('COMPLETE_DATA_BACKUP')"
      become: yes
      become_user: "{{ sid | lower }}adm"
      register: backup

    - name: Backup Result
      debug:
        var: backup.stdout_lines

    - name: Stop HANA DB on primary node
      command: "/usr/sap/{{ sid }}/HDB{{ number }}/HDB stop"
      become: yes
      become_user: "{{ sid | lower }}adm"
      register: prim_stop_db

    - name: Primary DB Service Result
      debug:
        var: prim_stop_db.stdout_lines

    - name: "/hana/shared/{{ sid }}/global/hdb/custom/config/global.ini"
      blockinfile:
        path: "/hana/shared/{{ sid }}/global/hdb/custom/config/global.ini"
        marker: "## {mark} added by ansible (configuration global.ini)"
        block: |
          [communication]
          listeninterface = .global

          [system_replication_communication]
          listeninterface = .internal

          [system_replication_hostname_resolution]
          {{ primary_server['replication_ip'] }} = {{ primary_server['hostname'] }}
          {{ secondary_server['replication_ip'] }} = {{ secondary_server['hostname'] }}

    - name: Start HANA DB on primary node
      command: "/usr/sap/{{ sid }}/HDB{{ number }}/HDB start"
      become: yes
      become_user: "{{ sid | lower }}adm"
      register: prim_start_db

    - name: Primary DB Service Result
      debug:
        var: prim_start_db.stdout_lines

    - name: Enabling System Replication for the on Primary Node
      shell: su - "{{ sid | lower }}adm" -c "/usr/sap/{{ sid }}/HDB{{ number }}/exe/hdbnsutil -sr_enable --name={{ primary_server['hostname'] }}"
      args:
        executable: /bin/bash
      register: system_replication

    - name: Enabling System Replication Status
      debug:
        var: system_replication.stdout_lines

    - name: Check Database System Replication Status Command
      shell: su - "{{ sid | lower }}adm" -c "/usr/sap/{{ sid }}/HDB{{ number }}/exe/hdbnsutil -sr_state"
      args:
        executable: /bin/bash
      register: system_replication_state

    - name: Check Database System Replication Status
      debug:
        var: system_replication_state.stdout_lines

  when: srstate_primary.stdout_lines | regex_search('mode:\\s+none')

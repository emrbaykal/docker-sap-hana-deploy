#!/bin/bash

# Function to validate IP addresses with CIDR notation
validate_ip_cidr() {
  local ip_cidr="$1"
  local ip="${ip_cidr%/*}"
  local cidr="${ip_cidr#*/}"

  # Validate the IP part
  if ! [[ $ip =~ ^[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
    echo "false"
    return
  fi

  IFS='.' read -ra ip_parts <<< "$ip"
  for i in "${ip_parts[@]}"; do
    if ((i < 0 || i > 255)); then
      echo "false"
      return
    fi
  done

  # Validate the CIDR part
  if ! [[ $cidr =~ ^[0-9]+$ ]] || ((cidr < 0 || cidr > 32)); then
    echo "false"
    return
  fi

  echo "true"
}

# Function to prompt for IP address in CIDR notation and validate it
prompt_for_ip_cidr() {
  while true; do
    read -p "IP Address (e.x: 10.254.254.12/24): " ipaddress
    if [[ $(validate_ip_cidr "$ipaddress") == "true" ]]; then
      break
    else
      echo "Invalid IP address format. Please try again."
    fi
  done
}

# Function to prompt for gateway and validate it
prompt_for_gateway() {
  while true; do
    read -p "Gateway (e.x: 10.254.254.1)       : " gateway
    if [[ $(validate_ip_cidr "$gateway/32") == "true" ]]; then
      break
    else
      echo "Invalid gateway format. Please try again."
    fi
  done
}

# Function to prompt for DNS server and validate it
prompt_for_dns() {
  while true; do
    read -p "Name Server (e.x: 10.254.254.10)  : " nameserver
    if [[ $(validate_ip_cidr "$nameserver/32") == "true" ]]; then
      break
    else
      echo "Invalid DNS server format. Please try again."
    fi
  done
}

# Function to prompt for network configuration choice
prompt_for_network_config() {
  while true; do
    read -p "Do you want to configure a static IP or use DHCP? (static/dhcp): " network_config
    echo
    case "$network_config" in
      static)
	echo "Please enter appliance static network configuration..."
        prompt_for_ip_cidr
        prompt_for_gateway
        prompt_for_dns
        configure_static
        break
        ;;
      dhcp)
        configure_dhcp
        break
        ;;
      *)
        echo "Invalid option. Please type 'static' or 'dhcp'."
        ;;
    esac
  done
}

# Placeholder for the static IP configuration function
configure_static() {
  sudo bash -c "cat > /etc/netplan/99-netcfg.yaml" <<EOF
  # Generated by Appliance Script.
  network:
    version: 2
    renderer: networkd
    ethernets:
      eth0:
        dhcp4: no
        dhcp6: no
        addresses:
          - ${ipaddress}
        routes:
          - to: default
            via: ${gateway}
        nameservers:
          addresses:
            - ${nameserver}
EOF

  echo ""
  sudo bash -c "netplan apply"
  echo "Static IP configuration applied..."
}

# Placeholder for the DHCP configuration function
configure_dhcp() {
  echo
  echo "Configuring DHCP..."
  network:
    version: 2
    renderer: networkd
    ethernets:
      eth0:
        dhcp4: yes
        dhcp6: yes
}

display_net() {
  # Display IP Address
  echo -n "IP Address: "
  ip a s eth0 | grep inet | awk '{ print $2 }' | head -1 | cut -f1 -d'/'

  # Display Gateway
  echo -n "Gateway   : "
  ip route | grep default | awk '{print $3}'

  # Display DNS Configuration
  echo -n "DNS Server: "
  resolvectl status | grep 'DNS Servers' | awk '{ print $3 }'
}

welcome_message() {

sudo bash -c "cat > /etc/update-motd.d/99-hpe" <<EOF
#!/bin/sh
#

IPADDR=\`ip a s eth0 | grep inet | awk '{ print \$2 }' | head -1 | cut -f1 -d'/'\`
GW=\`ip r s default | awk '{ print \$3 }'\`
DNS=\`resolvectl status | grep 'DNS Servers' | awk '{ print \$3 }'\`

# Display the MOTD
printf "\\n"
printf "#------------------------------------------------------------------------------#\n"
printf "#                    HPE SAP HANA DEPLOYMENT APPLIANCE                         #\\n"
printf "#                                                                              #\\n"
printf "# If you encounter any situation, please contact CEEMA GSD Value Department.   #\\n"
printf "# Build Number: 29032024-V2.0                                                  #\\n"
printf "# Author: Emre Baykal                                                          #\\n"
printf "# Mail To: trtsasm@hpe.com                                                     #\\n"
printf "# %-76s #\\n" ""
printf "# %-76s #\\n" "System IP Address : \$IPADDR "
printf "# %-76s #\\n" "Default Gateway   : \$GW "
printf "# %-76s #\\n" "DNS Address       : \$DNS"
printf "#------------------------------------------------------------------------------#\n"
printf "\\n"
EOF

  sudo bash -c "chmod +x /etc/update-motd.d/99-hpe"
}

echo ""
echo ""
echo "********************************************************************"
echo "******* Welcome to HPE SAP Systems Deployment Applicance  **********"
echo "************* Appliance Initial Network Configuration **************"
echo "********************************************************************"
echo "Note: Choose your dhcp and static configuration preference...       "
echo "********************************************************************"
echo ""

# Execute prompts
prompt_for_network_config
echo ""
sleep 5

echo "********************************************************************"
echo "****************** Appliance Network Configuration *****************"
echo "********************************************************************"
echo ""
display_net
echo

welcome_message

sed -i '/\/home\/hpe\/docker-sap-hana-deploy\/appliance\/net-apply\.sh/d' /home/hpe/.bashrc

